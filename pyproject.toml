[project]
name = "weather-aware-scheduler"
version = "0.1.0"
description = "A lightweight, explainable scheduling system that parses natural inputs and reasons about weather and conflicts"
authors = [{name = "Weather Scheduler Team"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "langgraph>=0.0.1",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "python-dateutil>=2.8.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
    "azure-identity>=1.15.0",
    "agent-framework>=1.0.0b251016",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "freezegun>=1.2.0",
    "hypothesis>=6.82.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-python-dateutil",
    "types-pyyaml",
]
viz = [
    "grandalf>=0.8",  # For DOT/Graphviz visualization generation
]

[project.scripts]
weather-scheduler = "src.cli.main:main"

[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "W", "UP", "B", "A", "C4", "DTZ", "T10", "ISC", "ICN", "G", "PIE", "PYI", "PT", "RET", "SIM", "TID", "ARG", "PLE", "PLW", "RUF"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "langgraph.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langchain.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src --cov-report=term-missing --cov-report=xml -v"
pythonpath = ["."]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/__pycache__/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.uv]
prerelease = "allow"

[dependency-groups]
dev = [
    "pytest-asyncio>=1.2.0",
]
