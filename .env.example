# ================================================
# Weather-Aware Scheduler - Environment Variables
# ================================================

# OpenAI API Key (for LLM-based parsing - optional in mock mode)
# Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...

# Azure OpenAI (alternative to OpenAI) - OPTIONAL
# AZURE_OPENAI_API_KEY=...
# AZURE_OPENAI_ENDPOINT=https://....openai.azure.com/
# AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4o-mini

# Agent Mode (execution framework)
# - "rule_engine" = LangGraph StateGraph (default, recommended)
# - "multi_agent" = Microsoft Agent Framework (for Teams/WeChat/LINE integrations)
AGENT_MODE=rule_engine

# ASCII Output Mode (for Windows console compatibility)
# Set to "true" if you see Unicode rendering issues (e.g., cp950 encoding)
ASCII_ONLY=false

# Mock Mode (no API calls required for testing)
# - "true" = Use mock weather/calendar tools (no API keys needed)
# - "false" = Use real weather/calendar APIs (requires API keys)
MOCK_MODE=true

# Logging Level
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ================================================
# Quick Start Instructions
# ================================================
#
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. For testing without API keys (recommended):
#    - Set MOCK_MODE=true
#    - Leave OPENAI_API_KEY empty or use placeholder
#
# 3. For production with real APIs:
#    - Set MOCK_MODE=false
#    - Add your OPENAI_API_KEY
#    - Configure real weather/calendar API credentials
#
# 4. Run tests:
#    uv run pytest tests/ --no-cov
#
# 5. Try CLI:
#    uv run python -m src.cli.main schedule "Friday 2pm Taipei meet Alice 60min"
#
